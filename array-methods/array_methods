>pop method returns the element that is popped out.
>push method returns the length of the new array --directly (REMEMBER THIS)
>pop removes the last element
>push adds to the end of the array

PUSH POP CHANGES THE OLD ARRAY, AND IS NOT COMPLETLY NEW
UNSHIFT ALSO CHANGES THE OLD ARRAY

>shift method returns the first element
>shift also reduces the length of the array
>unshift returns the length of the new array

pop -- removes last element
push--pushes to the end 
shift--removes the first element
unshift -- adds the element at the beginning

WITH THESE PUSH AND POP THE LENGTH OF THE ARRAY IS CHANGED, 
BUT "DELETE" LEAVES UNDEFINED VALUES IN THE ARRAY

splice does both adding and removing elements
>arr.splice(1, 2, "x", "y")--1 is the index to add the mentioned elements, 2 is the number of elements to 
be removes from the array counting form the beginning normally.
>"x" and "y" will be added from index 1
>splice can also be used to remove elements like pop ,but in splice we have the
ability to explicitly mention how many elements to be removed and from where they need to be removed
arr.splice(1,2)--removes two elements from index 1

RETURNS COMPLETELY A NEW ARRAY splice and slice(remember a vegetable cut)

>slice is to cut the elements and return completely the new array
>slice(3)--removes all eleemnts from 3rd index.
>slice(1,3)-- removes elements from index1 upto 3rd index(without including it)

>arr.indexOf(somelement)-returns -1 if that element is not present
>if there are repetetive elements then indexOf returns the first occurance index of that element
>arr.indexOf("mad", 0); searches from index 0 of arr and retruns the index.

>forEach look into "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" MDN
>POINTS TO REMEMBER,--function will be executed for every element in the aray
					--if after iteration of forEach if an element is added 
					  that effect will not be present in the invoked function(those elements will not be executed by the function invoked)
					--if an element is deleted or removed during the iteration, then that particular
					  element will be skipped and it continues with the other elements in the array.

>map also executes the function specified in it, like in forEach, BUT the difference is map
completely returns the new array without changing the array passed, the old remains same
look into "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"					  
